import{g as r,c as d,a as c,s as m,G as i,b as p,d as g}from"./fdb.08af45ee.js";import{s as o,j as n}from"./index.395ecdbb.js";async function y(t){const a=r();return d(a,t.email,t.password).then(s=>{let e=s.user;return o.commit("setUser",e),c("",e.email,e.uid),n.push({path:"/patients"}),null}).catch(s=>(console.log(s.code),s.code))}async function E(t){const a=r();return m(a,t.email,t.password).then(s=>{const e=s.user;return o.commit("setUser",e),c("",e.email,e.uid),n.push({path:"/patients"}),{succes:!0,errorMessage:""}}).catch(s=>{switch(s.code){case"auth/invalid-email":return{succes:!1,error:"Invalid email"};case"auth/user-not-found":return{succes:!1,error:"No account with that email was found"};case"auth/wrong-password":return{succes:!1,error:"Incorrect password"};default:return{succes:!1,error:"Email or password was incorrect"}}})}async function U(){const t=new i,a=r();p(a,t).then(s=>{const e=s.user;c(e.displayName,e.email,e.uid),o.commit("setUser",e),n.push({path:"/patients"})}).catch(s=>{const e=s.code,u=s.message,l=s.email,h=i.credentialFromError(s);console.log(e,u,l,h)})}async function W(){const t=r();return g(t).then(()=>{o.dispatch("logOutUser"),n.push({path:"/"})}).catch(a=>{console.log(a)})}export{U as R,W as a,E as l,y as r};
